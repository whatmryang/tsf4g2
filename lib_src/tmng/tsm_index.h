#ifndef _TSM_INDEX_H_
#define _TSM_INDEX_H_
//============================================================================
// @Id:       $Id: tsm_index.h 10522 2010-07-20 02:22:08Z tomaswang $
// @Author:   $Author: tomaswang $
// @Date:     $Date:: 2010-07-20 10:22:08 +0800 #$
// @Revision: $Revision: 10522 $
// @HeadURL:  $HeadURL:: https://tc-svn.tencent.com/ied/ied_tsf4g_rep/tsf4g_#$
//----------------------------------------------------------------------------
 

#include "toffset_hash.h"
#include "tsm_head.h"

#include "pal/tthread.h"


//----------------------------------------------------------------------------
// Index 头信息
//----------------------------------------------------------------------------
typedef struct
{
    int              iMagic;                // 魔数
    pthread_rwlock_t iLock;                 // 锁
    int              iCrc;                  // 头校验
    int              iVersion;              // 版本
    size_t           iSelfSize;             // 本结构体的尺寸
    OffsetArray      stLib;                 // Lib 索引结构: TsmObjMeta
    OffsetArray      stUri;                 // Uri 索引结构: TsmObjData
    OffsetHash       stHash;                // Hash索引结构
} TsmIndex;


//----------------------------------------------------------------------------
// APIs
//----------------------------------------------------------------------------
//  设置四个变量，以后用这些变量控制 index
//      a_iLibHash      每一条 Lib记录，需要多少个哈希结点做索引
//      a_iLibCap       每个 Inxex中最多可以容纳多少条 Lib记录
//      a_iUriHash      每一条 Uri记录，需要多少个哈希结点做索引
//      a_iUriCap       每个 Inxex中最多可以容纳多少条 Uri记录
//  返回的变量表示，有效的设置个数
//      设置的值和系统中的值一样，看做无效
//  PS: 这四个变量，只能在 tsm_index_init  之前设置
//      否则使用缺省值，缺省值在 tsm_base  中单件初始化函数中设置
//----------------------------------------------------------------------------
int tsm_index_base_set(int a_iIndexKey,
                       int a_iLibHash,
                       int a_iLibCap,
                       int a_iUriHash,
                       int a_iUriCap);

//----------------------------------------------------------------------------
//  从 index中取得系统的四个变量，返回有效取得数
//----------------------------------------------------------------------------
int tsm_index_base_get(TsmIndex *a_pstIndex);

//----------------------------------------------------------------------------
//  从 index中取得系统的四个变量，返回有效取得数
//----------------------------------------------------------------------------
int tsm_index_base_get(TsmIndex *a_pstIndex);

//----------------------------------------------------------------------------
//  取得索引区的 shmid
//----------------------------------------------------------------------------
int tsm_index_shmid();

//----------------------------------------------------------------------------
//  mount 索引区
//----------------------------------------------------------------------------
TsmIndex *tsm_index_mount();

//----------------------------------------------------------------------------
//  unmount 索引区
//----------------------------------------------------------------------------
int tsm_index_unmount(TsmIndex *);

//----------------------------------------------------------------------------
//  从哈希节点索引来得到 TsmObjMeta 指针
//----------------------------------------------------------------------------
TsmObjMeta *tsm_head_meta(TsmIndex *a_pstIndex,
                          int       a_iIndex,
                          int       a_iSeg);

//----------------------------------------------------------------------------
//  从哈希节点索引来得到 TsmObjData 指针
//----------------------------------------------------------------------------
TsmObjData *tsm_head_data(TsmIndex *a_pstIndex,
                          int       a_iIndex,
                          int       a_iSeg);

//----------------------------------------------------------------------------
//  从数组中分配 Obj对象的索引
//----------------------------------------------------------------------------
int tsm_head_obj_alloc(TsmIndex *a_pstIndex,
                       int       a_iType);

//----------------------------------------------------------------------------
//  从数组中释放 Obj对象
//----------------------------------------------------------------------------
int tsm_head_obj_free(TsmIndex *a_pstIndex,
                      int       a_iType,
                      int       a_iRow);


//----------------------------------------------------------------------------
// THE END
//============================================================================
#endif
