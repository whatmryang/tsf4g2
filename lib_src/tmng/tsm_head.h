#ifndef _TSM_HEAD_H_
#define _TSM_HEAD_H_
//============================================================================
// @Id:       $Id: tsm_head.h 10522 2010-07-20 02:22:08Z tomaswang $
// @Author:   $Author: tomaswang $
// @Date:     $Date:: 2010-07-20 10:22:08 +0800 #$
// @Revision: $Revision: 10522 $
// @HeadURL:  $HeadURL:: https://tc-svn.tencent.com/ied/ied_tsf4g_rep/tsf4g_#$
//----------------------------------------------------------------------------


#include "pal/tos.h"

#include "tsm_info.h"


//----------------------------------------------------------------------------
//  指向一块共享内存中的数据
//----------------------------------------------------------------------------
typedef struct
{
    int         iRef;                   // 数据的引用计数
    int         iIndexKey;              // 所在的 IndexKey
    int         iShmId;                 // 数据所在的共享内存 id
    size_t      iOffset;                // 数据在共享内存中的起始偏移
    size_t      iSize;                  // 数据的长度
} TsmObjPtr;

//----------------------------------------------------------------------------
//  
//----------------------------------------------------------------------------
typedef struct
{
    TsmObjPtr      stPtr;               // 内容指针
    time_t         stTime;              // 最后一次访问时间
    TsmTdrMetaInfo stMeta;              // Meta信息
} TsmObjMeta; 

//----------------------------------------------------------------------------
//  
//----------------------------------------------------------------------------
typedef struct
{
    TsmObjPtr      stPtr;               // 内容指针
    time_t         stTime;              // 最后一次访问时间
    TsmTdrMetaInfo stMeta;              // Meta信息
    TsmTdrDataInfo stData;              // Data信息
} TsmObjData;

//----------------------------------------------------------------------------
//  每块存储数据的共享内存，头部必须有这个结构用于管理 (索引器除外)
//----------------------------------------------------------------------------
typedef struct
{
    TsmObjPtr      stPtr;               // 内容指针
    time_t         stTime;              // 最后一次访问时间
    TsmTdrMetaInfo stMeta;              // Meta信息
    TsmTdrDataInfo stData;              // Uri 信息
    int            iUriType;            // Lib 类型或者 Uri类型
    int            iMagic;              // 魔数，表示这个条目有效
} TsmShmHead;

#define TSM_TDR_SHM_PROP (IPC_CREAT|IPC_EXCL|SHM_R|SHM_W|(SHM_R>>3)|(SHM_W>>3))


//============================================================================
//  数据指针相关 API
//----------------------------------------------------------------------------
//  初始化数据指针
//      a_pstPtr    指向待初始化的指针结构
//                  结构有两种可能，或者是 Lib，或者是 Uri
//      a_iUriType  布尔变量，表示 Lib类型或者 Uri类型
//      a_iSize     这个指针指向的数据尺寸 (加上头尺寸，才是共享内存尺寸)
//  返回负数表示失败
//      失败是因为所指定的共享内存不存在
//      或者尺寸太小，容纳不下 a_iSize +  头尺寸
//  返回 0表示成功
//----------------------------------------------------------------------------
int tsm_head_init(void       *a_pstPtr,
                  int         a_iUriType,
                  const void *a_pData,
                  size_t      a_iSize);

//----------------------------------------------------------------------------
//  删除共享内存
//----------------------------------------------------------------------------
int tsm_head_destroy(TsmObjPtr *a_pstPtr);

//----------------------------------------------------------------------------
//  取得数据指针
//----------------------------------------------------------------------------
void *tsm_head_at(TsmObjPtr *a_pstPtr, int a_iReadOnly);

//----------------------------------------------------------------------------
//  释放数据指针
//----------------------------------------------------------------------------
int tsm_head_dt(void *a_pstData);


//----------------------------------------------------------------------------
// THE END
//============================================================================
#endif
