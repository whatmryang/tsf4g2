/********************************************************************
**       This head file is generated by program,                   **
**            Please do not change it directly.                    **
********************************************************************/

/*       Version Number: 1          */

#ifndef TEST_TDR_SORT_H
#define TEST_TDR_SORT_H

/*   Define c types.   */

typedef unsigned short tdr_wchar_t;  /**<Wchar基本数据类型*/
typedef unsigned int tdr_date_t;	/**<data基本数据类型*/
typedef unsigned int tdr_time_t;	/**<time基本数据类型*/
typedef unsigned long long tdr_datetime_t; /**<datetime基本数据类型*/
typedef unsigned long int tdr_ip_t;  /**<IPv4数据类型*/
/*   Define Macros.   */

#define MAX_NUM_OF_ARRAY                         	6


#ifdef __cplusplus
extern "C" {
#endif

/*   Structs/unions prototype.   */

union tagsorttinyintArr;
typedef union  tagsorttinyintArr                   	SORTTINYINTARR;
typedef union  tagsorttinyintArr                   	*LPSORTTINYINTARR;

union tagsortsmallintArr;
typedef union  tagsortsmallintArr                  	SORTSMALLINTARR;
typedef union  tagsortsmallintArr                  	*LPSORTSMALLINTARR;

union tagsortlongArr;
typedef union  tagsortlongArr                      	SORTLONGARR;
typedef union  tagsortlongArr                      	*LPSORTLONGARR;

union taglonglongArr;
typedef union  taglonglongArr                      	LONGLONGARR;
typedef union  taglonglongArr                      	*LPLONGLONGARR;

struct tagcomposeArr;
typedef struct tagcomposeArr                       	COMPOSEARR;
typedef struct tagcomposeArr                       	*LPCOMPOSEARR;

struct tagSimpleSort;
typedef struct tagSimpleSort                       	SIMPLESORT;
typedef struct tagSimpleSort                       	*LPSIMPLESORT;

struct tagComposeSort;
typedef struct tagComposeSort                      	COMPOSESORT;
typedef struct tagComposeSort                      	*LPCOMPOSESORT;



/*   Define structs/unions.   */

#pragma pack(1)

union tagsorttinyintArr
{
    char szTinyintArr[MAX_NUM_OF_ARRAY]; 
    unsigned char szTinyuintArr[MAX_NUM_OF_ARRAY];
};

union tagsortsmallintArr
{
    short smallintArr[MAX_NUM_OF_ARRAY];  
    unsigned short smalluintArr[MAX_NUM_OF_ARRAY]; 
};

union tagsortlongArr
{
    long longArr[MAX_NUM_OF_ARRAY];      
    unsigned long ulongArr[MAX_NUM_OF_ARRAY];     
};

union taglonglongArr
{
    long long longlongArr[MAX_NUM_OF_ARRAY];  
    unsigned long long ulonglongArr[MAX_NUM_OF_ARRAY]; 
};

struct tagcomposeArr
{
    short nStrArrNum;                     
    char szStrArr[MAX_NUM_OF_ARRAY][32]; 
    short nFloatArrNum;                   
    float floatArr[MAX_NUM_OF_ARRAY];     
    double doubleArr[MAX_NUM_OF_ARRAY];    
};

struct tagSimpleSort
{
    char cIntArrCount;                   
    char _szPadding1[3];
    int sortint[MAX_NUM_OF_ARRAY];      
    short nSelect1;                       
    SORTTINYINTARR stSorttinyint;                  
    short nSelect2;                       
    SORTSMALLINTARR stSortsmallint;                 
    char _szPadding2[2];
    unsigned int sortuint[MAX_NUM_OF_ARRAY];     
    short nSelect3;                       
    SORTLONGARR stSortlong;                     
    short nSelect4;                       
    LONGLONGARR stSortlonglong;                 
    COMPOSEARR stSortMetaArr;                  
};

struct tagComposeSort
{
    short nSelect1;                       
    SORTTINYINTARR astSorttinyint[MAX_NUM_OF_ARRAY];
    COMPOSEARR astSortMetaArr1[MAX_NUM_OF_ARRAY];
    COMPOSEARR astSortMetaArr2[MAX_NUM_OF_ARRAY];
    COMPOSEARR astSortMetaArr3[MAX_NUM_OF_ARRAY];
    char _szPadding1[2];
    SIMPLESORT astSortSimpleSort1[MAX_NUM_OF_ARRAY];
    SIMPLESORT astSortSimpleSort2[MAX_NUM_OF_ARRAY];
};


#pragma pack()

#ifdef __cplusplus
}
#endif

#endif /* TEST_TDR_SORT_H */
